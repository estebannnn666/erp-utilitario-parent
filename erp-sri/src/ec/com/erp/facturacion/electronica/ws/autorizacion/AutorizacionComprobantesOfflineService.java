package ec.com.erp.facturacion.electronica.ws.autorizacion;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2017-10-14T21:18:33.227-05:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "AutorizacionComprobantesOfflineService", targetNamespace = "http://ec.gob.sri.ws.autorizacion", wsdlLocation = "") 
public class AutorizacionComprobantesOfflineService extends Service {

    public final static URL WSDL_LOCATION;

    static {
        URL url = null;
        try {
        	URL baseUrl = AutorizacionComprobantesOfflineService.class.getClassLoader().getResource(".");
			url = new URL(baseUrl, "");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AutorizacionComprobantesOfflineService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:AutorizacionComprobantesOffline.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AutorizacionComprobantesOfflineService(URL wsdlLocation, QName serviceName) { 
    	super(wsdlLocation, serviceName); 
    }

    public AutorizacionComprobantesOfflineService() { 
    	super(WSDL_LOCATION, new QName("http://ec.gob.sri.ws.autorizacion", "AutorizacionComprobantesOfflineService")); 
    }
    
    @WebEndpoint(name = "AutorizacionComprobantesOfflinePort")
    public AutorizacionComprobantesOffline getAutorizacionComprobantesOfflinePort() { 
    	return (AutorizacionComprobantesOffline)getPort(new QName("http://ec.gob.sri.ws.autorizacion", "AutorizacionComprobantesOfflinePort"), AutorizacionComprobantesOffline.class); 
    }
    
    @WebEndpoint(name = "AutorizacionComprobantesOfflinePort")
    public AutorizacionComprobantesOffline getAutorizacionComprobantesOfflinePort(WebServiceFeature... features) { 
    	return (AutorizacionComprobantesOffline)getPort(new QName("http://ec.gob.sri.ws.autorizacion", "AutorizacionComprobantesOfflinePort"), AutorizacionComprobantesOffline.class, features); 
    }
}
