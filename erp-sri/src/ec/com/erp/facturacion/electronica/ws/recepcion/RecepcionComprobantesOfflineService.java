package ec.com.erp.facturacion.electronica.ws.recepcion;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.4 2017-10-14T21:10:58.769-05:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "RecepcionComprobantesOfflineService", targetNamespace = "http://ec.gob.sri.ws.recepcion", wsdlLocation = "")
public class RecepcionComprobantesOfflineService extends Service {

	public final static URL WSDL_LOCATION;

//	public final static QName SERVICE = new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesOfflineService");
//	public final static QName RecepcionComprobantesPort = new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesOfflinePort");
	static {
		URL url = null;
		try {
			URL baseUrl = RecepcionComprobantesOfflineService.class.getClassLoader().getResource(".");
			url = new URL(baseUrl, "");
		} catch (MalformedURLException e) {
			java.util.logging.Logger.getLogger(RecepcionComprobantesOfflineService.class.getName()).log(
					java.util.logging.Level.INFO, "Can not initialize the default wsdl from {0}",
					"file:RecepcionComprobantesOffline.wsdl");
		}
		WSDL_LOCATION = url;
	}

	public RecepcionComprobantesOfflineService(URL wsdlLocation, QName serviceName) { 
		super(wsdlLocation, serviceName); 
	}
	  
	public RecepcionComprobantesOfflineService() { 
		super(WSDL_LOCATION, new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesOfflineService")); 
	}
	
	@WebEndpoint(name = "RecepcionComprobantesOfflinePort")
	public RecepcionComprobantesOffline getRecepcionComprobantesOfflinePort() { 
		return (RecepcionComprobantesOffline)getPort(new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesOfflinePort"), RecepcionComprobantesOffline.class); 
	}
	
	@WebEndpoint(name = "RecepcionComprobantesOfflinePort")
	public RecepcionComprobantesOffline getRecepcionComprobantesOfflinePort(WebServiceFeature... features) { 
		return (RecepcionComprobantesOffline)getPort(new QName("http://ec.gob.sri.ws.recepcion", "RecepcionComprobantesOfflinePort"), RecepcionComprobantesOffline.class, features); 
	}
}